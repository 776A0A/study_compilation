// Generated from ./antlrtest/Hello.g4 by ANTLR 4.9.2
// jshint ignore: start
import antlr4 from 'antlr4';



const serializedATN = ["\u0003\u608b\ua72a\u8133\ub9ed\u417c\u3be7\u7786",
    "\u5964\u0002\u0017{\b\u0001\u0004\u0002\t\u0002\u0004\u0003\t\u0003",
    "\u0004\u0004\t\u0004\u0004\u0005\t\u0005\u0004\u0006\t\u0006\u0004\u0007",
    "\t\u0007\u0004\b\t\b\u0004\t\t\t\u0004\n\t\n\u0004\u000b\t\u000b\u0004",
    "\f\t\f\u0004\r\t\r\u0004\u000e\t\u000e\u0004\u000f\t\u000f\u0004\u0010",
    "\t\u0010\u0004\u0011\t\u0011\u0004\u0012\t\u0012\u0004\u0013\t\u0013",
    "\u0004\u0014\t\u0014\u0004\u0015\t\u0015\u0004\u0016\t\u0016\u0003\u0002",
    "\u0003\u0002\u0003\u0002\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003",
    "\u0003\u0004\u0006\u00046\n\u0004\r\u0004\u000e\u00047\u0003\u0005\u0003",
    "\u0005\u0007\u0005<\n\u0005\f\u0005\u000e\u0005?\u000b\u0005\u0003\u0005",
    "\u0003\u0005\u0003\u0006\u0003\u0006\u0003\u0007\u0003\u0007\u0003\u0007",
    "\u0003\u0007\u0003\u0007\u0003\u0007\u0005\u0007K\n\u0007\u0003\b\u0003",
    "\b\u0003\t\u0003\t\u0003\n\u0003\n\u0003\u000b\u0003\u000b\u0003\f\u0003",
    "\f\u0003\r\u0003\r\u0003\u000e\u0003\u000e\u0003\u000f\u0003\u000f\u0003",
    "\u0010\u0003\u0010\u0003\u0011\u0003\u0011\u0003\u0012\u0003\u0012\u0003",
    "\u0013\u0003\u0013\u0003\u0014\u0003\u0014\u0007\u0014g\n\u0014\f\u0014",
    "\u000e\u0014j\u000b\u0014\u0003\u0015\u0006\u0015m\n\u0015\r\u0015\u000e",
    "\u0015n\u0003\u0015\u0003\u0015\u0003\u0016\u0003\u0016\u0005\u0016",
    "u\n\u0016\u0003\u0016\u0005\u0016x\n\u0016\u0003\u0016\u0003\u0016\u0003",
    "=\u0002\u0017\u0003\u0003\u0005\u0004\u0007\u0005\t\u0006\u000b\u0007",
    "\r\b\u000f\t\u0011\n\u0013\u000b\u0015\f\u0017\r\u0019\u000e\u001b\u000f",
    "\u001d\u0010\u001f\u0011!\u0012#\u0013%\u0014\'\u0015)\u0016+\u0017",
    "\u0003\u0002\u0006\u0003\u00022;\u0005\u0002C\\aac|\u0006\u00022;C\\",
    "aac|\u0004\u0002\u000b\u000b\"\"\u0002\u0083\u0002\u0003\u0003\u0002",
    "\u0002\u0002\u0002\u0005\u0003\u0002\u0002\u0002\u0002\u0007\u0003\u0002",
    "\u0002\u0002\u0002\t\u0003\u0002\u0002\u0002\u0002\u000b\u0003\u0002",
    "\u0002\u0002\u0002\r\u0003\u0002\u0002\u0002\u0002\u000f\u0003\u0002",
    "\u0002\u0002\u0002\u0011\u0003\u0002\u0002\u0002\u0002\u0013\u0003\u0002",
    "\u0002\u0002\u0002\u0015\u0003\u0002\u0002\u0002\u0002\u0017\u0003\u0002",
    "\u0002\u0002\u0002\u0019\u0003\u0002\u0002\u0002\u0002\u001b\u0003\u0002",
    "\u0002\u0002\u0002\u001d\u0003\u0002\u0002\u0002\u0002\u001f\u0003\u0002",
    "\u0002\u0002\u0002!\u0003\u0002\u0002\u0002\u0002#\u0003\u0002\u0002",
    "\u0002\u0002%\u0003\u0002\u0002\u0002\u0002\'\u0003\u0002\u0002\u0002",
    "\u0002)\u0003\u0002\u0002\u0002\u0002+\u0003\u0002\u0002\u0002\u0003",
    "-\u0003\u0002\u0002\u0002\u00050\u0003\u0002\u0002\u0002\u00075\u0003",
    "\u0002\u0002\u0002\t9\u0003\u0002\u0002\u0002\u000bB\u0003\u0002\u0002",
    "\u0002\rJ\u0003\u0002\u0002\u0002\u000fL\u0003\u0002\u0002\u0002\u0011",
    "N\u0003\u0002\u0002\u0002\u0013P\u0003\u0002\u0002\u0002\u0015R\u0003",
    "\u0002\u0002\u0002\u0017T\u0003\u0002\u0002\u0002\u0019V\u0003\u0002",
    "\u0002\u0002\u001bX\u0003\u0002\u0002\u0002\u001dZ\u0003\u0002\u0002",
    "\u0002\u001f\\\u0003\u0002\u0002\u0002!^\u0003\u0002\u0002\u0002#`\u0003",
    "\u0002\u0002\u0002%b\u0003\u0002\u0002\u0002\'d\u0003\u0002\u0002\u0002",
    ")l\u0003\u0002\u0002\u0002+w\u0003\u0002\u0002\u0002-.\u0007k\u0002",
    "\u0002./\u0007h\u0002\u0002/\u0004\u0003\u0002\u0002\u000201\u0007k",
    "\u0002\u000212\u0007p\u0002\u000223\u0007v\u0002\u00023\u0006\u0003",
    "\u0002\u0002\u000246\t\u0002\u0002\u000254\u0003\u0002\u0002\u00026",
    "7\u0003\u0002\u0002\u000275\u0003\u0002\u0002\u000278\u0003\u0002\u0002",
    "\u00028\b\u0003\u0002\u0002\u00029=\u0007$\u0002\u0002:<\u000b\u0002",
    "\u0002\u0002;:\u0003\u0002\u0002\u0002<?\u0003\u0002\u0002\u0002=>\u0003",
    "\u0002\u0002\u0002=;\u0003\u0002\u0002\u0002>@\u0003\u0002\u0002\u0002",
    "?=\u0003\u0002\u0002\u0002@A\u0007$\u0002\u0002A\n\u0003\u0002\u0002",
    "\u0002BC\u0007?\u0002\u0002C\f\u0003\u0002\u0002\u0002DK\u0007@\u0002",
    "\u0002EF\u0007@\u0002\u0002FK\u0007?\u0002\u0002GK\u0007>\u0002\u0002",
    "HI\u0007>\u0002\u0002IK\u0007?\u0002\u0002JD\u0003\u0002\u0002\u0002",
    "JE\u0003\u0002\u0002\u0002JG\u0003\u0002\u0002\u0002JH\u0003\u0002\u0002",
    "\u0002K\u000e\u0003\u0002\u0002\u0002LM\u0007,\u0002\u0002M\u0010\u0003",
    "\u0002\u0002\u0002NO\u0007-\u0002\u0002O\u0012\u0003\u0002\u0002\u0002",
    "PQ\u0007%\u0002\u0002Q\u0014\u0003\u0002\u0002\u0002RS\u0007=\u0002",
    "\u0002S\u0016\u0003\u0002\u0002\u0002TU\u00070\u0002\u0002U\u0018\u0003",
    "\u0002\u0002\u0002VW\u0007.\u0002\u0002W\u001a\u0003\u0002\u0002\u0002",
    "XY\u0007]\u0002\u0002Y\u001c\u0003\u0002\u0002\u0002Z[\u0007_\u0002",
    "\u0002[\u001e\u0003\u0002\u0002\u0002\\]\u0007}\u0002\u0002] \u0003",
    "\u0002\u0002\u0002^_\u0007\u007f\u0002\u0002_\"\u0003\u0002\u0002\u0002",
    "`a\u0007*\u0002\u0002a$\u0003\u0002\u0002\u0002bc\u0007+\u0002\u0002",
    "c&\u0003\u0002\u0002\u0002dh\t\u0003\u0002\u0002eg\t\u0004\u0002\u0002",
    "fe\u0003\u0002\u0002\u0002gj\u0003\u0002\u0002\u0002hf\u0003\u0002\u0002",
    "\u0002hi\u0003\u0002\u0002\u0002i(\u0003\u0002\u0002\u0002jh\u0003\u0002",
    "\u0002\u0002km\t\u0005\u0002\u0002lk\u0003\u0002\u0002\u0002mn\u0003",
    "\u0002\u0002\u0002nl\u0003\u0002\u0002\u0002no\u0003\u0002\u0002\u0002",
    "op\u0003\u0002\u0002\u0002pq\b\u0015\u0002\u0002q*\u0003\u0002\u0002",
    "\u0002rt\u0007\u000f\u0002\u0002su\u0007\f\u0002\u0002ts\u0003\u0002",
    "\u0002\u0002tu\u0003\u0002\u0002\u0002ux\u0003\u0002\u0002\u0002vx\u0007",
    "\f\u0002\u0002wr\u0003\u0002\u0002\u0002wv\u0003\u0002\u0002\u0002x",
    "y\u0003\u0002\u0002\u0002yz\b\u0016\u0002\u0002z,\u0003\u0002\u0002",
    "\u0002\u000b\u00027=Jfhntw\u0003\b\u0002\u0002"].join("");


const atn = new antlr4.atn.ATNDeserializer().deserialize(serializedATN);

const decisionsToDFA = atn.decisionToState.map( (ds, index) => new antlr4.dfa.DFA(ds, index) );

export default class Hello extends antlr4.Lexer {

    static grammarFileName = "Hello.g4";
    static channelNames = [ "DEFAULT_TOKEN_CHANNEL", "HIDDEN" ];
	static modeNames = [ "DEFAULT_MODE" ];
	static literalNames = [ null, "'if'", "'int'", null, null, "'='", null, 
                         "'*'", "'+'", "'#'", "';'", "'.'", "','", "'['", 
                         "']'", "'{'", "'}'", "'('", "')'" ];
	static symbolicNames = [ null, "If", "Int", "IntLiteral", "StringLiteral", 
                          "AssignmentOP", "RelationalOP", "Star", "Plus", 
                          "Sharp", "SemiColon", "Dot", "Comm", "LeftBracket", 
                          "RightBracket", "LeftBrace", "RightBrace", "LeftParen", 
                          "RightParen", "Id", "Whitespace", "NewLine" ];
	static ruleNames = [ "If", "Int", "IntLiteral", "StringLiteral", "AssignmentOP", 
                      "RelationalOP", "Star", "Plus", "Sharp", "SemiColon", 
                      "Dot", "Comm", "LeftBracket", "RightBracket", "LeftBrace", 
                      "RightBrace", "LeftParen", "RightParen", "Id", "Whitespace", 
                      "NewLine" ];

    constructor(input) {
        super(input)
        this._interp = new antlr4.atn.LexerATNSimulator(this, atn, decisionsToDFA, new antlr4.PredictionContextCache());
    }

    get atn() {
        return atn;
    }
}

Hello.EOF = antlr4.Token.EOF;
Hello.If = 1;
Hello.Int = 2;
Hello.IntLiteral = 3;
Hello.StringLiteral = 4;
Hello.AssignmentOP = 5;
Hello.RelationalOP = 6;
Hello.Star = 7;
Hello.Plus = 8;
Hello.Sharp = 9;
Hello.SemiColon = 10;
Hello.Dot = 11;
Hello.Comm = 12;
Hello.LeftBracket = 13;
Hello.RightBracket = 14;
Hello.LeftBrace = 15;
Hello.RightBrace = 16;
Hello.LeftParen = 17;
Hello.RightParen = 18;
Hello.Id = 19;
Hello.Whitespace = 20;
Hello.NewLine = 21;



